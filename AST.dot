digraph AST {
	node0[label="prog"]
	node1[label="define_func (None)"]
	node0->node1
	node2[label="declare_func"]
	node1->node2
	node3[label="main (i32)"]
	node2->node3
	node4[label="arguments"]
	node3->node4
	node5[label="scope"]
	node1->node5
	node6[label="assign"]
	node5->node6
	node7[label="i (None)"]
	node6->node7
	node8[label="3 (i32)"]
	node6->node8
	node9[label="c (None)"]
	node5->node9
	node10[label="func_call"]
	node5->node10
	node11[label="printf (i32 (i8*, ...))"]
	node10->node11
	node12[label="arguments"]
	node10->node12
	node13[label="Enter the number of prime numbers required\0A\00 (i8*)"]
	node12->node13
	node14[label="func_call"]
	node5->node14
	node15[label="scanf (i32 (i8*, ...))"]
	node14->node15
	node16[label="arguments"]
	node14->node16
	node17[label="%d\00 (i8*)"]
	node16->node17
	node18[label="& (None)"]
	node16->node18
	node19[label="n (None)"]
	node18->node19
	node20[label="branch"]
	node5->node20
	node21[label="if"]
	node20->node21
	node22[label=">= (None)"]
	node21->node22
	node23[label="n (None)"]
	node22->node23
	node24[label="1 (i32)"]
	node22->node24
	node25[label="scope"]
	node21->node25
	node26[label="func_call"]
	node25->node26
	node27[label="printf (i32 (i8*, ...))"]
	node26->node27
	node28[label="arguments"]
	node26->node28
	node29[label="First %d prime numbers are :\0A\00 (i8*)"]
	node28->node29
	node30[label="n (None)"]
	node28->node30
	node31[label="func_call"]
	node25->node31
	node32[label="printf (i32 (i8*, ...))"]
	node31->node32
	node33[label="arguments"]
	node31->node33
	node34[label="2\0A\00 (i8*)"]
	node33->node34
	node35[label="assign"]
	node5->node35
	node36[label="count (None)"]
	node35->node36
	node37[label="2 (i32)"]
	node35->node37
	node38[label="while"]
	node5->node38
	node39[label="<= (None)"]
	node38->node39
	node40[label="count (None)"]
	node39->node40
	node41[label="n (None)"]
	node39->node41
	node42[label="scope"]
	node38->node42
	node43[label="assign"]
	node42->node43
	node44[label="c (None)"]
	node43->node44
	node45[label="2 (i32)"]
	node43->node45
	node46[label="while"]
	node42->node46
	node47[label="<= (None)"]
	node46->node47
	node48[label="c (None)"]
	node47->node48
	node49[label="- (None)"]
	node47->node49
	node50[label="i (None)"]
	node49->node50
	node51[label="1 (i32)"]
	node49->node51
	node52[label="scope"]
	node46->node52
	node53[label="branch"]
	node52->node53
	node54[label="if"]
	node53->node54
	node55[label="== (None)"]
	node54->node55
	node56[label="% (None)"]
	node55->node56
	node57[label="i (None)"]
	node56->node57
	node58[label="c (None)"]
	node56->node58
	node59[label="0 (i32)"]
	node55->node59
	node60[label="scope"]
	node54->node60
	node61[label="break"]
	node60->node61
	node62[label="x++ (None)"]
	node52->node62
	node63[label="c (None)"]
	node62->node63
	node64[label="branch"]
	node42->node64
	node65[label="if"]
	node64->node65
	node66[label="== (None)"]
	node65->node66
	node67[label="c (None)"]
	node66->node67
	node68[label="i (None)"]
	node66->node68
	node69[label="scope"]
	node65->node69
	node70[label="func_call"]
	node69->node70
	node71[label="printf (i32 (i8*, ...))"]
	node70->node71
	node72[label="arguments"]
	node70->node72
	node73[label="%d\0A\00 (i8*)"]
	node72->node73
	node74[label="i (None)"]
	node72->node74
	node75[label="x++ (None)"]
	node69->node75
	node76[label="count (None)"]
	node75->node76
	node77[label="x++ (None)"]
	node42->node77
	node78[label="i (None)"]
	node77->node78
	node79[label="return"]
	node5->node79
	node80[label="0 (i32)"]
	node79->node80
}