digraph AST {
	node0[label="prog"]
	node1[label="define_func (None)"]
	node0->node1
	node2[label="declare_func"]
	node1->node2
	node3[label="main (i32)"]
	node2->node3
	node4[label="arguments"]
	node3->node4
	node5[label="scope"]
	node1->node5
	node6[label="func_call"]
	node5->node6
	node7[label="printf (i32 (i8*, ...))"]
	node6->node7
	node8[label="arguments"]
	node6->node8
	node9[label="%d; \00 (i8*)"]
	node8->node9
	node10[label="&& (None)"]
	node8->node10
	node11[label="1 (i32)"]
	node10->node11
	node12[label="2 (i32)"]
	node10->node12
	node13[label="func_call"]
	node5->node13
	node14[label="printf (i32 (i8*, ...))"]
	node13->node14
	node15[label="arguments"]
	node13->node15
	node16[label="%d; \00 (i8*)"]
	node15->node16
	node17[label="&& (None)"]
	node15->node17
	node18[label="0 (i32)"]
	node17->node18
	node19[label="2 (i32)"]
	node17->node19
	node20[label="func_call"]
	node5->node20
	node21[label="printf (i32 (i8*, ...))"]
	node20->node21
	node22[label="arguments"]
	node20->node22
	node23[label="%d; \00 (i8*)"]
	node22->node23
	node24[label="|| (None)"]
	node22->node24
	node25[label="1 (i32)"]
	node24->node25
	node26[label="2 (i32)"]
	node24->node26
	node27[label="func_call"]
	node5->node27
	node28[label="printf (i32 (i8*, ...))"]
	node27->node28
	node29[label="arguments"]
	node27->node29
	node30[label="%d; \00 (i8*)"]
	node29->node30
	node31[label="|| (None)"]
	node29->node31
	node32[label="0 (i32)"]
	node31->node32
	node33[label="0 (i32)"]
	node31->node33
	node34[label="func_call"]
	node5->node34
	node35[label="printf (i32 (i8*, ...))"]
	node34->node35
	node36[label="arguments"]
	node34->node36
	node37[label="%d; \00 (i8*)"]
	node36->node37
	node38[label="&& (None)"]
	node36->node38
	node39[label="|| (None)"]
	node38->node39
	node40[label="0.5 (double)"]
	node39->node40
	node41[label="0.0 (double)"]
	node39->node41
	node42[label="|| (None)"]
	node38->node42
	node43[label="0.0 (double)"]
	node42->node43
	node44[label="1.0 (double)"]
	node42->node44
	node45[label="func_call"]
	node5->node45
	node46[label="printf (i32 (i8*, ...))"]
	node45->node46
	node47[label="arguments"]
	node45->node47
	node48[label="%d; \00 (i8*)"]
	node47->node48
	node49[label="! (None)"]
	node47->node49
	node50[label="&& (None)"]
	node49->node50
	node51[label="1 (i32)"]
	node50->node51
	node52[label="2 (i32)"]
	node50->node52
	node53[label="return"]
	node5->node53
	node54[label="1 (i32)"]
	node53->node54
}